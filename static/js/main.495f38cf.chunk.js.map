{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","mapitems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,I,qCCwCAA,MAjCf,SAAmBC,GACf,IAEMC,EAFQD,EAAME,MAEGC,KAAI,SAACC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAERC,GAAIH,EAAKI,IAETC,MAAOL,EAAKM,KAEZC,SAAU,SAACC,GACPZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAG7C,+BACI,cAAC,IAAD,aAAiBH,UAAU,UAAUU,QAAS,kBAAMf,EAAMgB,WAAWZ,EAAKI,MAAMS,KAAK,SAArF,WACa,kBAAMjB,EAAMgB,WAAWZ,EAAKI,eAdnBJ,EAAKI,QAoB3C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eC1BjBmB,IAAQC,IAAIC,K,IAmFGC,E,kDAhFb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXtB,MAAO,GACPuB,YAAa,CACXf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAbA,E,wDAgBPf,GACViB,KAAKC,SAAS,CACZL,YAAa,CACXf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,8BAKRpB,GACNA,EAAEqB,iBAEF,IAAMC,EAAUL,KAAKL,MAAMC,YAG3B,GAFAU,QAAQC,IAAIF,GAES,KAAjBA,EAAQxB,KAAa,CACvB,IAAM2B,EAAQ,sBAAOR,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACvCL,KAAKC,SAAS,CACZ5B,MAAOmC,EACPZ,YAAa,CACXf,KAAM,GACNF,IAAK,S,iCAOFA,GACT,IAAM8B,EAAgBT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,MAAQA,KACnEqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,gCAID5B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACJA,EAAKI,MAAQA,IACfJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAMA,M,+BAKR,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,YAAYiC,SAAUX,KAAKD,QAApC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,aAAahC,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAUkB,KAAKH,cAC/F,8CAGJ,cAAC,EAAD,CAAWxB,MAAO2B,KAAKL,MAAMtB,MAC3Bc,WAAYa,KAAKb,WACjBH,UAAWgB,KAAKhB,mB,GA3ER6B,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.495f38cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nimport './ListItems.css'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items\r\n\r\n    const mapitems = items.map((item) => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\"\r\n\r\n                    id={item.key}\r\n\r\n                    value={item.text}\r\n\r\n                    onChange={(e) => {\r\n                        props.setUpdate(e.target.value, item.key)\r\n                    }}\r\n                />\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" onClick={() => props.deleteItem(item.key)} icon='trash'\r\n                        onClick={() => props.deleteItem(item.key)} />\r\n                </span>\r\n            </p>\r\n\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {mapitems}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems","import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component } from 'react'\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\"\n      }\n    }\n    this.handleInput = this.handleInput.bind(this)\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.setUpdate = this.setUpdate.bind(this)\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault()\n\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n\n    if (newItem.text !== \"\") {\n      const newItems = [...this.state.items, newItem]\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n          key: \"\"\n        }\n      })\n    }\n\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"form-todo\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter Text\" value={this.state.currentItem.text} onChange={this.handleInput} />\n            <button>Add</button>\n          </form>\n        </header>\n        <ListItems items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        />\n      </div>\n    )\n  }\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}